,First,Follows,NonTerminals,;,(,),{,},Name,void,char,short,int,long,float,double,string,",",return,if,else,==,<=,>=,!=,>,<,=,CharacterValue,StringValue,FloatValue,IntegerValue,while,+,-,/,*,&,|,^,%,end
0,"[';', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']",['end'],Functions,Functions -> ;,scan,scan,scan,scan,scan,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,Functions -> Function Functions,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
1,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","[';', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string', 'end']",Function,pop,scan,scan,scan,scan,scan,Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },Function -> FunctionType FunctionName ( parameter ) { content },pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
2,['Name'],"['(', 'end']",FunctionName,scan,pop,scan,scan,scan,FunctionName -> Name,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
3,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","['Name', 'end']",FunctionType,scan,scan,scan,scan,scan,pop,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,FunctionType -> type-specifier,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
4,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","['Name', 'end']",type-specifier,scan,scan,scan,scan,scan,pop,type-specifier -> void,type-specifier -> void,type-specifier -> void,type-specifier -> void,type-specifier -> void,type-specifier -> void,type-specifier -> void,type-specifier -> void,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
5,"[""''"", ';', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","[')', 'end']",parameters,scan,scan,parameters -> '',scan,scan,scan,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,parameters -> parameter D,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
6,"[',', ""''""]","[')', 'end']",D,scan,scan,D -> '',scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,"D -> , parameters",scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
7,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","[')', ',', 'end']",parameter,scan,scan,pop,scan,scan,scan,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,parameter -> dataType Name,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
8,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","['Name', 'end']",dataType,scan,scan,scan,scan,scan,pop,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,dataType -> type-specifier,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
9,"[""''"", 'if', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string', 'while', 'Name', 'return']","['}', 'end']",content,scan,scan,scan,scan,content -> '',content -> Akshat ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,content -> variableInitialization ; content,pop,content -> returnStatement ; content,content -> conditionalStatement content,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,content -> loop content,scan,scan,scan,scan,scan,scan,scan,scan,pop
10,['return'],"[';', 'end']",returnStatement,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,returnStatement -> return temp,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
11,"['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","[';', 'end']",temp,pop,scan,scan,scan,scan,temp -> Name functionCall,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,temp -> valueVariable,temp -> valueVariable,temp -> valueVariable,temp -> valueVariable,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
12,['Name'],"[';', 'end']",Akshat,pop,scan,scan,scan,scan,Akshat -> Name Aryan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
13,"['(', '=']","[';', 'end']",Aryan,pop,Aryan -> functionCall,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,Aryan -> operation,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
14,['if'],"['}', 'if', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string', 'while', 'Name', 'return', 'end']",conditionalStatement,scan,scan,scan,scan,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,conditionalStatement -> if ( condition ) { content } Extra,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,pop
15,"['else', ""''""]","['}', 'if', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string', 'while', 'Name', 'return', 'end']",Extra,scan,scan,scan,scan,Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',Extra -> '',pop,Extra -> '',Extra -> '',Extra -> else { content },scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,Extra -> '',scan,scan,scan,scan,scan,scan,scan,scan,pop
16,"['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","[')', 'end']",condition,scan,scan,pop,scan,scan,condition -> NameOrValue doubleOperator NameOrValue,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,condition -> NameOrValue doubleOperator NameOrValue,condition -> NameOrValue doubleOperator NameOrValue,condition -> NameOrValue doubleOperator NameOrValue,condition -> NameOrValue doubleOperator NameOrValue,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
17,"['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","['==', '<=', '>=', '!=', '>', '<', ')', '', ',', 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', '+', '-', '/', '*', '&', '|', '^', '%', ';', 'end']",NameOrValue,pop,scan,pop,scan,scan,NameOrValue -> Name,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,pop,pop,pop,pop,pop,pop,pop,NameOrValue -> valueVariable,NameOrValue -> valueVariable,NameOrValue -> valueVariable,NameOrValue -> valueVariable,scan,pop,pop,pop,pop,pop,pop,pop,pop,pop
18,"['==', '<=', '>=', '!=', '>', '<']","['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', 'end']",doubleOperator,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,doubleOperator -> ==,doubleOperator -> ==,doubleOperator -> ==,doubleOperator -> ==,doubleOperator -> ==,doubleOperator -> ==,scan,pop,pop,pop,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
19,"['void', 'char', 'short', 'int', 'long', 'float', 'double', 'string']","[';', 'end']",variableInitialization,pop,scan,scan,scan,scan,scan,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,variableInitialization -> type-specifier Name moreVariable,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
20,"['=', ""''""]","[';', 'end']",moreVariable,moreVariable -> '',scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,moreVariable -> = valueVariable,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
21,"['CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","['==', '<=', '>=', '!=', '>', '<', ')', ',', 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', '+', '-', '/', '*', '&', '|', '^', '%', ';', 'end']",valueVariable,pop,scan,pop,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,pop,pop,pop,pop,pop,pop,pop,valueVariable -> CharacterValue,valueVariable -> CharacterValue,valueVariable -> CharacterValue,valueVariable -> CharacterValue,scan,pop,pop,pop,pop,pop,pop,pop,pop,pop
22,['('],"[';', 'end']",functionCall,pop,functionCall -> ( arguments ),scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
23,"[',', ""''"", 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","[')', 'end']",arguments,scan,scan,arguments -> names,scan,scan,arguments -> names,scan,scan,scan,scan,scan,scan,scan,scan,arguments -> names,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,arguments -> names,arguments -> names,arguments -> names,arguments -> names,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
24,"[',', ""''"", 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","[')', 'end']",names,scan,scan,names -> '',scan,scan,	names -> NameOrValueOrOperations names,scan,scan,scan,scan,scan,scan,scan,scan,"names -> , NameOrValueOrOperations",scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,names -> NameOrValueOrOperations names,names -> NameOrValueOrOperations names,names -> NameOrValueOrOperations names,names -> NameOrValueOrOperations names,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
25,"['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue']","[',', ')', 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', 'end']",NameOrValueOrOperations,scan,scan,pop,scan,scan,NameOrValueOrOperations -> NameOrValue Decide,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,NameOrValueOrOperations -> NameOrValue Decide,NameOrValueOrOperations -> NameOrValue Decide,NameOrValueOrOperations -> NameOrValue Decide,NameOrValueOrOperations -> NameOrValue Decide,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
26,"[""''"", '+', '-', '/', '*', '&', '|', '^', '%']","[',', ')', 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', 'end']",Decide,scan,scan,Decide -> '',scan,scan,Decide -> '',scan,scan,scan,scan,scan,scan,scan,scan,Decide -> '',scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,Decide -> '',Decide -> '',Decide -> '',Decide -> '',scan,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,Decide -> operationRHS,pop
27,['while'],"['}', 'if', 'void', 'char', 'short', 'int', 'long', 'float', 'double', 'string', 'while', 'Name', 'return', 'end']",loop,scan,scan,scan,scan,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,loop -> while ( condition ) { content },scan,scan,scan,scan,scan,scan,scan,scan,pop
28,"['+', '-', '/', '*', '&', '|', '^', '%']","[',', ')', 'Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', 'end']",operationRHS,scan,scan,pop,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,pop,pop,pop,scan,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,operationRHS -> operators NameOrValue,pop
29,['='],"[';', 'end']",operation,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,operation -> = NameOrValue operationRHS,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop
30,"['+', '-', '/', '*', '&', '|', '^', '%']","['Name', 'CharacterValue', 'StringValue', 'FloatValue', 'IntegerValue', 'end']",operators,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,pop,scan,scan,scan,scan,scan,scan,scan,scan,scan,scan,pop,pop,pop,pop,scan,operators -> +,operators -> +,operators -> +,operators -> +,operators -> +,operators -> +,operators -> +,operators -> +,pop
